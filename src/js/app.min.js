(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _listManager = require('./components/listManager');

(0, _listManager.listManager)();

},{"./components/listManager":2}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.listManager = undefined;

var _getUserItem = require('./listManager/getUserItem');

var _addItemToList = require('./listManager/addItemToList');

var appListManager = document.querySelector("[data-app-list-manager]");

var listManager = exports.listManager = function listManager() {

	// only fire for `appListManager`
	if (appListManager) {

		var elementUserInput = document.querySelector("[data-app-list-manager] input[type='text']"),
		    elementUserSubmit = document.querySelector("[data-app-list-manager] input[type='submit']"),
		    elementTable = document.querySelector("[data-app-list-manager] table");

		elementUserSubmit.addEventListener("click", function () {
			(0, _addItemToList.addItemToList)(elementTable, (0, _getUserItem.getUserItem)(elementUserInput));
		});

		elementUserInput.addEventListener("keyup", function (event) {
			event.preventDefault();
			if (event.keyCode === 13) {
				(0, _addItemToList.addItemToList)(elementTable, (0, _getUserItem.getUserItem)(elementUserInput));
			}
		});
	}
};

},{"./listManager/addItemToList":3,"./listManager/getUserItem":4}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.addItemToList = undefined;

var _returnItemId = require("./returnItemId");

var addItemToList = exports.addItemToList = function addItemToList(elementTable, elementUserInput) {

	if (elementUserInput) {

		var newRow = elementTable.insertRow(0),
		    newCellWithInput = newRow.insertCell(0),
		    newCellWithDelete = newRow.insertCell(0);

		newRow.setAttribute("data-item-id", (0, _returnItemId.returnItemId)(), 0);
		newCellWithInput.innerHTML = "<button class='button small secondary app-list-manager_input-delete'>Delete</button>";
		newCellWithDelete.innerHTML = elementUserInput;
	}
};

},{"./returnItemId":5}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var getUserItem = exports.getUserItem = function getUserItem(elementUserInput) {

	var elementUserDataItem = elementUserInput.value;

	elementUserInput.value = "";

	return elementUserDataItem;
};

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var returnItemId = exports.returnItemId = function returnItemId() {

	var itemId = Math.floor(Math.random() * 10000);

	return itemId;
};

},{}]},{},[1]);
