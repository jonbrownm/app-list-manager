(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _listManager = require('./components/listManager');

(0, _listManager.listManager)();

},{"./components/listManager":2}],2:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.listManager = undefined;

var _loadList = require('./listManager/loadList');

var _getItem = require('./listManager/getItem');

var _addItem = require('./listManager/addItem');

var _deleteItem = require('./listManager/deleteItem');

var _displayNotification = require('./listManager/displayNotification');

var appListManager = document.querySelector("[data-app-list-manager]");

var listManager = exports.listManager = function listManager() {

	// only fire for `appListManager`
	if (appListManager) {

		var appDataList = [],
		    appNotification = document.querySelector("[data-app-list-manager] div[data-app-notification]"),
		    elementUserInput = document.querySelector("[data-app-list-manager] input[type='text']"),
		    elementUserSubmit = document.querySelector("[data-app-list-manager] input[type='submit']"),
		    elementTable = document.querySelector("[data-app-list-manager] table");

		// fires on page load
		(0, _loadList.loadList)(elementTable, appNotification);

		// fires on submit click
		elementUserSubmit.addEventListener("click", function () {
			(0, _addItem.addItem)(appDataList, elementTable, (0, _getItem.getItem)(elementUserInput), appNotification);
		});

		// fires on enter submit
		elementUserInput.addEventListener("keyup", function (event) {
			event.preventDefault();
			if (event.keyCode === 13) {
				(0, _addItem.addItem)(appDataList, elementTable, (0, _getItem.getItem)(elementUserInput), appNotification);
			}
		});

		// fires on delete click
		elementTable.addEventListener("click", function (event) {

			var elementUserDelete;

			if (event.target.hasAttribute("data-item-delete")) {
				elementUserDelete = event.target;
				(0, _deleteItem.deleteItem)(appDataList, elementUserDelete, appNotification);
			}
		});
	}
};

},{"./listManager/addItem":3,"./listManager/deleteItem":4,"./listManager/displayNotification":5,"./listManager/getItem":6,"./listManager/loadList":7}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.addItem = undefined;

var _returnItemId = require('./returnItemId');

var _displayNotification = require('./displayNotification');

var addItem = exports.addItem = function addItem(appDataList, elementTable, elementUserInput, appNotification) {

	if (elementUserInput) {

		var newRow = elementTable.insertRow(0),
		    newCellWithInput = newRow.insertCell(0),
		    newCellWithDelete = newRow.insertCell(0),
		    newItemId = (0, _returnItemId.returnItemId)(elementTable);

		newRow.setAttribute("data-item-id", newItemId, 0);
		newCellWithInput.innerHTML = "<button class='button small secondary app-list-manager_input-delete' data-item-delete>Delete</button>";
		newCellWithDelete.innerHTML = elementUserInput;

		appDataList.push(elementUserInput);
		localStorage.setItem(newItemId, elementUserInput);

		(0, _displayNotification.displayNotification)(appNotification, 2, "2000");
	} else {
		(0, _displayNotification.displayNotification)(appNotification, 1, "2000");
	}
};

},{"./displayNotification":5,"./returnItemId":8}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.deleteItem = undefined;

var _displayNotification = require("./displayNotification");

var deleteItem = exports.deleteItem = function deleteItem(appDataList, elementUserDelete, appNotification) {

	var currentTableRows = document.querySelectorAll("[data-app-list-manager] table tbody tr"),
	    currentId = elementUserDelete.parentElement.parentElement.getAttribute("data-item-id"),
	    currentTableRowId,
	    currentTableRowDescription;

	[].forEach.call(currentTableRows, function (row) {
		currentTableRowId = row.getAttribute("data-item-id");
		currentTableRowDescription = row.firstChild.innerHTML;

		if (currentId === currentTableRowId) {
			row.remove();
			localStorage.removeItem(currentId);

			var i = appDataList.indexOf(currentTableRowDescription);
			if (i != -1) {
				appDataList.splice(i, 1);
			}

			// console.log(appDataList)
		}
	});

	(0, _displayNotification.displayNotification)(appNotification, 3, "2000");
};

},{"./displayNotification":5}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var displayNotification = exports.displayNotification = function displayNotification(appNotification, errorMessage, errorState) {

	var errorMessages = ["Your list is empty, please start entering them above.", "Please enter a valid entry.", "Your entry has been added to the list.", "Your entry has been deleted from the list."];

	if (errorState === "ON") {
		appNotification.innerHTML = errorMessages[errorMessage];
		appNotification.style.opacity = "1";
	} else if (errorState === "OFF") {
		appNotification.innerHTML = "";
		appNotification.style.opacity = "0";
	} else {
		appNotification.innerHTML = errorMessages[errorMessage];
		appNotification.style.opacity = "1";

		setTimeout(function () {
			appNotification.innerHTML = errorMessages[errorMessage];
			appNotification.style.opacity = "0";
		}, errorState);
	}
};

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var getItem = exports.getItem = function getItem(elementUserInput) {

	var elementUserDataItem = elementUserInput.value;

	elementUserInput.value = "";

	return elementUserDataItem;
};

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.loadList = undefined;

var _displayNotification = require("./displayNotification");

var loadList = exports.loadList = function loadList(elementTable, appNotification) {

	for (var i = 0; i < localStorage.length; i++) {

		var newRow = elementTable.insertRow(0),
		    newCellWithInput = newRow.insertCell(0),
		    newCellWithDelete = newRow.insertCell(0),
		    newItemId = localStorage.key(i),
		    newItemDescription = localStorage.getItem(localStorage.key(i));

		newRow.setAttribute("data-item-id", newItemId, 0);
		newCellWithInput.innerHTML = "<button class='button small secondary app-list-manager_input-delete' data-item-delete>Delete</button>";
		newCellWithDelete.innerHTML = newItemDescription;
	}

	if (!localStorage.length > 0) {
		(0, _displayNotification.displayNotification)(appNotification, 0, "2000");
	}
};

},{"./displayNotification":5}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
var returnItemId = exports.returnItemId = function returnItemId(elementTable) {

	var itemId = elementTable.rows.length;

	return itemId;
};

},{}]},{},[1]);
